{"ast":null,"code":"import React,{createContext,useState,useContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(JSON.parse(localStorage.getItem('user')));const[token,setToken]=useState(localStorage.getItem('token'));const login=(userData,authToken)=>{setUser(userData);setToken(authToken);localStorage.setItem('user',JSON.stringify(userData));localStorage.setItem('token',authToken);};const logout=()=>{setUser(null);setToken(null);localStorage.removeItem('user');localStorage.removeItem('token');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,token,login,logout},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useContext","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","JSON","parse","localStorage","getItem","token","setToken","login","userData","authToken","setItem","stringify","logout","removeItem","Provider","value","useAuth","context","Error"],"sources":["C:/Users/lenovo/Desktop/React-Udemy/CHATGPT-MERN/chatgpt-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')));\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  const login = (userData, authToken) => {\r\n    setUser(userData);\r\n    setToken(authToken);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    localStorage.setItem('token', authToken);\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,IAAI,CAAC,CAEvC,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAACU,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAC1E,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAACY,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAEjE,KAAM,CAAAG,KAAK,CAAGA,CAACC,QAAQ,CAAEC,SAAS,GAAK,CACrCT,OAAO,CAACQ,QAAQ,CAAC,CACjBF,QAAQ,CAACG,SAAS,CAAC,CACnBN,YAAY,CAACO,OAAO,CAAC,MAAM,CAAET,IAAI,CAACU,SAAS,CAACH,QAAQ,CAAC,CAAC,CACtDL,YAAY,CAACO,OAAO,CAAC,OAAO,CAAED,SAAS,CAAC,CAC1C,CAAC,CAED,KAAM,CAAAG,MAAM,CAAGA,CAAA,GAAM,CACnBZ,OAAO,CAAC,IAAI,CAAC,CACbM,QAAQ,CAAC,IAAI,CAAC,CACdH,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC,CAC/BV,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC,CAClC,CAAC,CAED,mBACEnB,IAAA,CAACC,WAAW,CAACmB,QAAQ,EAACC,KAAK,CAAE,CAAEhB,IAAI,CAAEM,KAAK,CAAEE,KAAK,CAAEK,MAAO,CAAE,CAAAd,QAAA,CACzDA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAkB,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGzB,UAAU,CAACG,WAAW,CAAC,CACvC,GAAI,CAACsB,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,cAAe,CAAAtB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}